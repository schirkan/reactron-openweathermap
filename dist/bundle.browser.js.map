{"version":3,"file":"bundle.browser.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/browser/components/WeatherForecast.tsx","../src/browser/components/WeatherComponent.tsx","../src/browser/index.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import moment from 'moment';\r\nimport * as React from 'react';\r\n\r\nimport './WeatherForecast.scss';\r\n\r\n\r\ninterface IWeatherForecastProps {\r\n  localDateString: string;\r\n  conditions: WeatherModels.IWeatherResponseCondition[];\r\n}\r\n\r\nexport class WeatherForecast extends React.Component<IWeatherForecastProps> {\r\n\r\n  private renderConditions() {\r\n    return (\r\n      <div>\r\n        {this.props.conditions.map(c => (\r\n          <div key={c.dt}>\r\n            {moment.utc(c.dt_txt).local().format('YYYY-MM-DD HH:mm:ss')}<br />\r\n            {c.dt_txt}: {c.weather[0].main} ({c.weather[0].icon}) - {c.weather[0].description}<br />\r\n            Temp: {c.main.temp_min} / {c.main.temp_max}<br />\r\n            {c.rain && (<React.Fragment>Rain: {c.rain['3h']} mm<br /></React.Fragment>)}\r\n            {c.snow && (<React.Fragment>Snow: {c.snow['3h']} mm<br /></React.Fragment>)}\r\n            <hr />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n    // const iconClassName = 'wi wi-' + this.props.icon + ' wi-wu-' + this.props.icon;\r\n    {/* <span>{this.props.date}</span>\r\n        <i className={iconClassName} />\r\n        <span>{this.props.conditions}</span>\r\n        <span>{this.props.low} °C</span> / <span>{this.props.high} °C</span> */}\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className=\"WeatherForecast\">\r\n        <span>{this.props.localDateString}</span>\r\n        {this.renderConditions()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { IWeatherService } from 'src/common/interfaces/IWeatherService';\r\nimport { WeatherForecast } from './WeatherForecast';\r\n\r\nimport './WeatherComponent.scss';\r\n\r\n// tslint:disable-next-line:no-var-requires\r\nconst moment = require('moment');\r\n\r\ninterface IWeatherComponentState {\r\n  weatherForecast?: WeatherModels.IWeatherResponse;\r\n  error?: any;\r\n}\r\n\r\nexport class WeatherComponent extends React.Component<WeatherModels.ILocationRequest, IWeatherComponentState> {\r\n  public context: IReactronComponentContext;\r\n\r\n  constructor(props: WeatherModels.ILocationRequest) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadWeatherData();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: WeatherModels.ILocationRequest) {\r\n    if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\r\n      this.loadWeatherData();\r\n    }\r\n  }\r\n\r\n  private loadWeatherData() {\r\n    const weatherService = this.context.getService<IWeatherService>('WeatherService');\r\n    if (weatherService) {\r\n      weatherService.getFiveDaysForecast(this.props)\r\n        .then(response => this.setState({ weatherForecast: response }))\r\n        .catch(error => this.setState({ error }));\r\n    }\r\n  }\r\n\r\n  private renderForecast() {\r\n    if (!this.state.weatherForecast) {\r\n      return;\r\n    }\r\n\r\n    const days: { [date: string]: WeatherModels.IWeatherResponseCondition[] } = {};\r\n\r\n    // group by date\r\n    this.state.weatherForecast.list.forEach(item => {\r\n      const localDate = moment.utc(item.dt_txt).local();\r\n      const localDateString = localDate.format('YYYY-MM-DD');\r\n      if (!days[localDateString]) {\r\n        days[localDateString] = [];\r\n      }\r\n      days[localDateString].push(item);\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {Object.keys(days).map(dateString =>\r\n          <WeatherForecast key={dateString} localDateString={dateString} conditions={days[dateString]} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return 'Error: ' + this.state.error;\r\n    }\r\n\r\n    if (!this.state.weatherForecast) {\r\n      return this.context.renderLoading('Loading weather...');\r\n    }\r\n\r\n    return (\r\n      <section className=\"WeatherComponent\">\r\n        <div>\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faCloudSun} />\r\n          Weather for {this.state.weatherForecast.city.name}, {this.state.weatherForecast.city.country}\r\n        </div>\r\n        {this.renderForecast()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport { WeatherComponent } from './components/WeatherComponent';\r\n\r\nexport * from './components/WeatherComponent';\r\n\r\nexport const components: IReactronComponentDefinition[] = [{\r\n    component: WeatherComponent,\r\n    description: 'Weather Forecast by OpenWeatherMap',\r\n    displayName: 'Weather Forecast',\r\n    fields: [{\r\n        description: 'City Name',\r\n        displayName: 'City Name',\r\n        name: 'cityName',\r\n        valueType: 'string'\r\n    }, {\r\n        description: 'Zip, Country Code',\r\n        displayName: 'Zip, Country Code',\r\n        name: 'zip',\r\n        valueType: 'string'\r\n    }, {\r\n        description: 'Coordinates',\r\n        displayName: 'Coordinates',\r\n        name: 'coords',\r\n        valueType: 'object',\r\n        fields: [{\r\n            description: 'lat',\r\n            displayName: 'lat',\r\n            name: 'lat',\r\n            valueType: 'number'\r\n        }, {\r\n            description: 'lon',\r\n            displayName: 'lon',\r\n            name: 'lon',\r\n            valueType: 'number'\r\n        }]\r\n    }, {\r\n        description: 'City Id',\r\n        displayName: 'City Id',\r\n        name: 'cityId',\r\n        valueType: 'number'\r\n    }],\r\n    name: 'WeatherComponent'\r\n}];"],"names":["tslib_1.__extends","React.createElement","React.Fragment","React.Component","moment","FontAwesome.FontAwesomeIcon","SvgIcons.faCloudSun"],"mappings":"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"}