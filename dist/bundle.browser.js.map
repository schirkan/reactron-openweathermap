{"version":3,"file":"bundle.browser.js","sources":["../src/browser/components/locationInput.tsx","../node_modules/numeral/numeral.js","../node_modules/style-inject/dist/style-inject.es.js","../src/browser/components/WeatherIcon.tsx","../src/browser/components/WeatherConditionsPerDay.tsx","../src/browser/components/WeatherForecast.tsx","../src/browser/index.ts"],"sourcesContent":["import { IInputComponentProps } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\n\r\nexport const locationInput = (props: IInputComponentProps) => {\r\n  return props && props.value && (props.value.cityName || props.value.zip) ||\r\n    (<span style={{ color: 'red' }}>missing</span>);\r\n};","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from 'react';\r\n\r\nlet styleSheetInjected = false;\r\nconst injectStyleSheet = () => {\r\n  if (styleSheetInjected) {\r\n    return;\r\n  }\r\n  styleSheetInjected = true;\r\n  const head = document.head || document.getElementsByTagName('head')[0];\r\n  if (head) {\r\n    const style = document.createElement('link');\r\n    style.rel = 'stylesheet';\r\n    style.href = '/modules/reactron-openweathermap/public/css/weather-icons.min.css';\r\n    head.appendChild(style);\r\n  }\r\n};\r\n\r\ninterface IWeatherIconProps {\r\n  weatherId: string | number;\r\n  night?: boolean;\r\n}\r\n\r\nexport class WeatherIcon extends React.Component<IWeatherIconProps> {\r\n  public componentDidMount() {\r\n    injectStyleSheet();\r\n  }\r\n\r\n  public render() {\r\n    const dayOrNight = this.props.night ? 'night' : 'day';\r\n    const iconClassName = 'wi wi-owm-' + dayOrNight + '-' + this.props.weatherId;\r\n\r\n    return <i className={iconClassName} />;\r\n  }\r\n}\r\n","import moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { IWeatherCondition } from 'src/common/interfaces/IWeatherCondition';\r\n\r\nimport './WeatherConditionsPerDay.scss';\r\nimport { WeatherIcon } from './WeatherIcon';\r\n\r\ninterface IWeatherConditionsPerDayProps {\r\n  localDateString: string;\r\n  conditions: IWeatherCondition[];\r\n  showDateHeader: boolean;\r\n  timeFormat: string;\r\n  timezone: string;\r\n}\r\n\r\nexport class WeatherConditionsPerDay extends React.Component<IWeatherConditionsPerDayProps> {\r\n  public render() {\r\n    const timeFormat = this.props.timeFormat || 'LT';\r\n\r\n    return (\r\n      <section className=\"WeatherConditionsPerDay\" >\r\n        <span className=\"date-header\" hidden={!this.props.showDateHeader}>{this.props.localDateString}</span>\r\n        <div className=\"condition-list\">\r\n          {this.props.conditions.map(c => {\r\n            const time = moment.utc(c.dt_txt).tz(this.props.timezone);\r\n            const night = c.weather_icon.endsWith('n');\r\n            // const rain = Math.round(c.rain * 100) / 100;\r\n            // const snow = Math.round(c.snow * 100) / 100;\r\n\r\n            return (\r\n              <React.Fragment key={c.dt}>\r\n                <span className=\"time\">{time.format(timeFormat)}</span>\r\n                <span className=\"icon\"><WeatherIcon weatherId={c.weather_id} night={night} /></span>\r\n                <span className=\"temp\">{numeral(c.temp).format('0.0')}</span>\r\n                <span>{c.weather_description}</span>\r\n                {/* <span>\r\n                {rain ? (<React.Fragment>Rain: {rain.toFixed(2)} mm</React.Fragment>) : null}\r\n                {snow ? (<React.Fragment> - Snow: {snow.toFixed(2)} mm</React.Fragment>) : null}\r\n              </span> */}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport * as React from 'react';\r\nimport { ILocationRequest } from 'src/common/interfaces/ILocationRequest';\r\nimport { IWeatherCondition } from 'src/common/interfaces/IWeatherCondition';\r\nimport { IWeatherForecast } from 'src/common/interfaces/IWeatherForecast';\r\nimport { IWeatherService } from 'src/common/interfaces/IWeatherService';\r\nimport { WeatherConditionsPerDay } from './WeatherConditionsPerDay';\r\n\r\nimport './WeatherForecast.scss';\r\n\r\ninterface IWeatherForecastProps {\r\n  location: ILocationRequest;\r\n  showHeader: boolean;\r\n  showDateHeader: boolean;\r\n  showShadow: boolean;\r\n  timeFormat: string;\r\n  forecastDays: number;\r\n}\r\n\r\ninterface IWeatherForecastState {\r\n  weatherForecast?: IWeatherForecast;\r\n  error?: any;\r\n}\r\n\r\nexport class WeatherForecast extends React.Component<IWeatherForecastProps, IWeatherForecastState> {\r\n  public context: IReactronComponentContext;\r\n\r\n  constructor(props: IWeatherForecastProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.loadWeatherData();\r\n    // TODO: subscribe refresh\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IWeatherForecastProps) {\r\n    if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\r\n      this.loadWeatherData();\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    // TODO: unsubscribe refresh\r\n  }\r\n\r\n  private loadWeatherData() {\r\n    const weatherService = this.context.getService<IWeatherService>('WeatherService');\r\n    if (weatherService) {\r\n      weatherService.getFiveDaysForecast(this.props.location)\r\n        .then(response => this.setState({ weatherForecast: response }))\r\n        .catch(error => this.setState({ error }));\r\n    }\r\n  }\r\n\r\n  private renderForecast() {\r\n    if (!this.state.weatherForecast) {\r\n      return;\r\n    }\r\n\r\n    const timezone = this.context.settings.timezone;\r\n    const today = moment().tz(timezone);\r\n    const forecastDays = Math.max(this.props.forecastDays, 1);\r\n    const days: { [date: string]: IWeatherCondition[] } = {};\r\n\r\n    // group by date\r\n    this.state.weatherForecast.list.forEach(item => {\r\n      const localDate = moment.utc(item.dt_txt).tz(timezone);\r\n\r\n      if (localDate.diff(today, 'days', true) > forecastDays) {\r\n        return;\r\n      }\r\n\r\n      const localDateString = localDate.format('L');\r\n      if (!days[localDateString]) {\r\n        days[localDateString] = [];\r\n      }\r\n      days[localDateString].push(item);\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {Object.keys(days).map(dateString =>\r\n          <WeatherConditionsPerDay key={dateString} localDateString={dateString}\r\n            conditions={days[dateString]} timezone={timezone}\r\n            showDateHeader={this.props.showDateHeader} timeFormat={this.props.timeFormat} />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.error) {\r\n      return 'Error: ' + this.state.error;\r\n    }\r\n\r\n    if (!this.state.weatherForecast) {\r\n      return this.context.renderLoading('Loading weather...');\r\n    }\r\n\r\n    return (\r\n      <section className=\"WeatherForecast\">\r\n        <div className=\"shadow\" hidden={!this.props.showShadow} />\r\n        <div className=\"header\" hidden={!this.props.showHeader}>\r\n          Weather forecast for {this.state.weatherForecast.city.name}, {this.state.weatherForecast.city.country}\r\n        </div>\r\n        {this.renderForecast()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport { locationInput } from './components/locationInput';\r\nimport { WeatherForecast } from './components/WeatherForecast';\r\nimport { WeatherIcon } from './components/WeatherIcon';\r\n\r\nexport * from './components/WeatherForecast';\r\n\r\nexport const components: IReactronComponentDefinition[] = [{\r\n  component: WeatherForecast,\r\n  description: 'Weather Forecast by OpenWeatherMap',\r\n  displayName: 'Weather Forecast',\r\n  fields: [{\r\n    description: 'Location',\r\n    displayName: 'Location',\r\n    name: 'location',\r\n    valueType: 'object',\r\n    fields: [{\r\n      description: 'City Name',\r\n      displayName: 'City Name',\r\n      name: 'cityName',\r\n      valueType: 'string'\r\n    }, {\r\n      description: 'Zip, Country Code',\r\n      displayName: 'Zip, Country Code',\r\n      name: 'zip',\r\n      valueType: 'string'\r\n      // }, {\r\n      //     description: 'Coordinates',\r\n      //     displayName: 'Coordinates',\r\n      //     name: 'coords',\r\n      //     valueType: 'object',\r\n      //     fields: [{\r\n      //         description: 'lat',\r\n      //         displayName: 'lat',\r\n      //         name: 'lat',\r\n      //         valueType: 'number'\r\n      //     }, {\r\n      //         description: 'lon',\r\n      //         displayName: 'lon',\r\n      //         name: 'lon',\r\n      //         valueType: 'number'\r\n      //     }]\r\n      // }, {\r\n      //     description: 'City Id',\r\n      //     displayName: 'City Id',\r\n      //     name: 'cityId',\r\n      //     valueType: 'number'\r\n    }],\r\n    inputControl: locationInput\r\n  }, {\r\n    description: 'Show header',\r\n    displayName: 'Show header',\r\n    name: 'showHeader',\r\n    valueType: 'boolean',\r\n    defaultValue: true\r\n  }, {\r\n    description: 'Show date header',\r\n    displayName: 'Show date header',\r\n    name: 'showDateHeader',\r\n    valueType: 'boolean',\r\n    defaultValue: true\r\n  }, {\r\n    description: 'Show shadow',\r\n    displayName: 'Show shadow',\r\n    name: 'showShadow',\r\n    valueType: 'boolean',\r\n    defaultValue: true\r\n  }, {\r\n    description: 'see https://momentjs.com/',\r\n    displayName: 'Time format',\r\n    name: 'timeFormat',\r\n    valueType: 'string',\r\n    defaultValue: 'LT'\r\n  }, {\r\n    description: 'Forecast days',\r\n    displayName: 'Forecast days',\r\n    name: 'forecastDays',\r\n    valueType: 'number',\r\n    values: [\r\n      { text: '1', value: 1 },\r\n      { text: '2', value: 2 },\r\n      { text: '3', value: 3 },\r\n      { text: '4', value: 4 },\r\n      { text: '5', value: 5 }\r\n    ],\r\n    defaultValue: 2\r\n  }],\r\n  name: 'WeatherComponent'\r\n}, {\r\n  component: WeatherIcon,\r\n  type: 'internal',\r\n  name: 'WeatherIcon',\r\n  displayName: 'WeatherIcon'\r\n}];"],"names":["React.createElement","this","tslib_1.__extends","React.Component","React.Fragment"],"mappings":"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"}